{
  "active": false,
  "connections": {
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Get Labels",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Labels": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Trello",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2023-07-19T13:43:34.489Z",
  "id": "o8stQZL8knxOP1sz",
  "name": "Summarize Email",
  "nodes": [
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyX",
              "value": 10,
              "unit": "minutes"
            }
          ]
        },
        "filters": {}
      },
      "id": "850250af-618e-419a-a099-e0665a3e10de",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [
        980,
        220
      ],
      "credentials": {
        "gmailOAuth2": {
          "id": "y7GNNcjfG1PQyv6w",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "resource": "chat",
        "prompt": {
          "messages": [
            {
              "content": "=Analyze, summarize and prioritize the following email message {\"email-message\":\"{{ $json.snippet.trim() }}\" } from \"{{ $json.From}}\" and respond only an JSON object with the following fields: {\"summary\": (add your summary here), \"from\": \"{{$json.From}}\", \"to\":\"{{$json.To }}\", \"subject\":\"{{$json.Subject }}\", \"thedate\": \"{{ Date($json.internalDate) }}\", \"priority\": (add priority between Low, Medium, High here)}"
            }
          ]
        },
        "simplifyOutput": false,
        "options": {}
      },
      "id": "9eace112-c906-43e8-bb4c-303235f0cb17",
      "name": "OpenAI",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1,
      "position": [
        1200,
        240
      ],
      "credentials": {
        "openAiApi": {
          "id": "LYi7gb0cZpqrpITa",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "listId": "64a77cf5678be1c2e20cc86d",
        "name": "={{ $('Gmail Trigger').item.json.From }}",
        "description": "=Received: {{ Date($('Gmail Trigger').item.json.internalDate) }}\n\nSubject:{{ $('Gmail Trigger').item.json.Subject }}\n\nSummary: {{ JSON.parse($('OpenAI').item.json.choices[0].message.content).summary }}\n\nLabels: {{ $jmespath($('Gmail Trigger').item.json.labels,'[*].name') }} ",
        "additionalFields": {
          "pos": "top",
          "idLabels": "={{ $json.labelid }}"
        }
      },
      "id": "30e7192a-ca64-47ea-afe7-4f7f865985b4",
      "name": "Trello",
      "type": "n8n-nodes-base.trello",
      "typeVersion": 1,
      "position": [
        1820,
        300
      ],
      "credentials": {
        "trelloApi": {
          "id": "bM93I4KXlkUWTuue",
          "name": "Trello account"
        }
      }
    },
    {
      "parameters": {
        "resource": "label",
        "boardId": {
          "__rl": true,
          "value": "59b092c86abf74bd9de64a98",
          "mode": "list",
          "cachedResultName": "Personal",
          "cachedResultUrl": "https://trello.com/b/r3MmDcm0/personal"
        },
        "additionalFields": {}
      },
      "id": "32636039-6c68-4b81-ac02-2286d38bc45e",
      "name": "Get Labels",
      "type": "n8n-nodes-base.trello",
      "typeVersion": 1,
      "position": [
        1380,
        240
      ],
      "credentials": {
        "trelloApi": {
          "id": "bM93I4KXlkUWTuue",
          "name": "Trello account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nconst tmpreturn = [];\nconst txtpriority = JSON.parse($('OpenAI').item.json.choices[0].message.content).priority;\n\nfor (const item of $input.all()) {\n  console.log();\n  if (item.json.name == txtpriority ) \n  {\n    tmpreturn.push({\n      \"json\":\n        {\n          \"labelname\": item.json.name,\n          \"labelid\": item.json.id\n        },\n      \"pairedItem\": item.pairedItem.item\n    } )   \n  }\n}\nreturn tmpreturn;"
      },
      "id": "3fd53a34-af08-49c5-9eb0-0c9f2fe5181b",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        1620,
        300
      ]
    }
  ],
  "pinData": {},
  "settings": {},
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2023-07-19T14:05:58.000Z",
  "versionId": "79d77aa4-6e17-41d0-971e-0073fb9e1c06"
}